version: '3.8'

services:
  # Redis pour le cache et les sessions
  redis:
    image: redis:7-alpine
    container_name: hellojade-redis
    ports:
      - "6379:6379"
    networks:
      - hellojade-network
    restart: unless-stopped

  # Prometheus pour le monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: hellojade-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - hellojade-network
    restart: unless-stopped

  # Grafana pour les dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: hellojade-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=hellojade123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - hellojade-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Ollama pour l'IA locale
  ollama:
    image: ollama/ollama:latest
    container_name: hellojade-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - hellojade-network
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  ollama_data:
    driver: local

networks:
  hellojade-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 